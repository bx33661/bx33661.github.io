---
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import PageHead from '@/components/PageHead.astro'
import Search from '@/components/react/search'
import PaginationComponent from '@/components/ui/pagination'
import Layout from '@/layouts/Layout.astro'
import { getAllNoteSlugs } from '@/lib/data-utils'
import type { PaginateFunction } from 'astro'
import { Icon } from 'astro-icon/components'

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const allNoteSlugs = await getAllNoteSlugs()
  const notesWithSlugs = allNoteSlugs.map(({ slug, note }) => ({ ...note, slug }))
  return paginate(notesWithSlugs, { pageSize: 5 })
}

const { page } = Astro.props
const allNoteSlugs = await getAllNoteSlugs()
const searchList = allNoteSlugs.map(({ slug, note }) => ({ ...note, slug }))
const currentUrl = Astro.url;
---

<Layout canonicalUrl={currentUrl}>
  <PageHead slot="head" title="其他 - 学习笔记" />
  
  <Breadcrumbs
    items={[
      { label: '其他', href: '/notes', icon: 'lucide:book-open' },
      { label: `Page ${page.currentPage}`, icon: 'lucide:folder-open' },
    ]}
  />
  <section class="max-screen mt-12 px-4 md:px-6">
    <div class="flex w-fit items-center gap-2 text-primary">
        <Icon class="h-4 w-4 text-secondary-foreground animate-pulse" name="lucide:book-open" />
        <p class="shimmer word-spacing font-mono text-sm uppercase leading-none text-secondary-foreground">
          Learning Notes
        </p>
    </div>
    <h2
    id="notes-title"
    class="font-custom text-foreground text-4xl font-bold mt-2"
    >
      学习笔记
    </h2>
    <p class="text-muted-foreground text-md max-w-2xl mt-3">
      这里记录了我的学习历程和知识积累。包含各种技术学习笔记、日常思考和经验总结。希望这些内容能够帮助到有需要的朋友，也欢迎大家一起交流学习！
    </p>

    <div class="flex min-h-[calc(100vh-18rem)] flex-col gap-y-8 my-12">
      <Search client:load searchList={searchList} initialPosts={page.data} />
    </div>

    <PaginationComponent
      currentPage={page.currentPage}
      totalPages={page.lastPage}
      baseUrl="/notes/"
      client:load
    />
  </section>
</Layout>

<style>
  .shimmer {
    background: linear-gradient(90deg, 
      hsl(var(--muted-foreground)) 0%, 
      hsl(var(--primary)) 50%, 
      hsl(var(--muted-foreground)) 100%);
    background-size: 200% 100%;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: shimmer 2s ease-in-out infinite;
  }

  @keyframes shimmer {
    0% { background-position: -200% 0; }
    100% { background-position: 200% 0; }
  }

  .word-spacing {
    letter-spacing: 0.1em;
  }
</style>