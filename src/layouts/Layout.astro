---
import '@/styles/global.css'
import '@/styles/typography.css'
import '@/styles/dark-mode-enhancement.css'
import '@/styles/article-readability.css'
import '@/styles/code-highlight-enhancement.css'
import '@/styles/geek-dark-theme.css'
import '@/styles/geek-animations.css'


import Footer from '@/components/Footer.astro'
import Head from '@/components/Head.astro'
import Navbar from '@/components/react/navbar'
import { SITE } from '@/consts'
import { cn } from '@/lib/utils'
import Posthog from '@/components/Posthog.astro'

const {
  isWide = false
} = Astro.props
---

<!doctype html>
<html lang={SITE.locale}>
  <Head>
    <slot name="head" />
    <!-- 优化分析脚本加载：延迟加载，减少对性能的影响 -->
    <script is:inline>
      // 延迟加载 Ahrefs 分析脚本
      window.addEventListener('load', function() {
        setTimeout(function() {
          const script = document.createElement('script');
          script.src = 'https://analytics.ahrefs.com/analytics.js';
          script.setAttribute('data-key', '+FHMgRP7/Duxaq5D0gZtJw');
          script.async = true;
          document.head.appendChild(script);
        }, 2000);
      });
    </script>
    <script is:inline data-astro-rerun>
      ;(() => {
        const STORAGE_KEY = 'theme'
        const THEME_EVENT = 'bx-theme-change'
        const MEDIA_QUERY = '(prefers-color-scheme: dark)'
        const BACKGROUND_FALLBACK = {
          light: '#f8fafc',
          dark: '#1a1b26',
        }

        const html = document.documentElement
        const prefersDark = window.matchMedia(MEDIA_QUERY)

        const safeStorage = {
          get() {
            try {
              return localStorage.getItem(STORAGE_KEY)
            } catch (error) {
              return null
            }
          },
          set(value) {
            try {
              localStorage.setItem(STORAGE_KEY, value)
            } catch (error) {
              /* 忽略 */
            }
          },
          clear() {
            try {
              localStorage.removeItem(STORAGE_KEY)
            } catch (error) {
              /* 忽略 */
            }
          },
        }

        const emitThemeChange = (theme) => {
          window.dispatchEvent(new CustomEvent(THEME_EVENT, { detail: { theme } }))
        }

        const applyTheme = (theme, { persist = false, animate = false } = {}) => {
          const isDark = theme === 'dark'

          if (animate) {
            html.classList.add('disable-transitions')
            html.style.transition = 'background-color 0.3s ease, color 0.3s ease'
          }

          html.classList.toggle('dark', isDark)
          html.dataset.theme = isDark ? 'dark' : 'light'
          html.style.colorScheme = isDark ? 'dark' : 'light'
          html.style.backgroundColor = BACKGROUND_FALLBACK[isDark ? 'dark' : 'light']

          if (persist) {
            safeStorage.set(isDark ? 'dark' : 'light')
          }

          emitThemeChange(isDark ? 'dark' : 'light')

          if (animate) {
            requestAnimationFrame(() => {
              html.classList.remove('disable-transitions')
              html.style.transition = ''
            })
          }
        }

        const readInitialTheme = () => {
          const stored = safeStorage.get()
          if (stored === 'light' || stored === 'dark') {
            return stored
          }
          return prefersDark.matches ? 'dark' : 'light'
        }

        const applyInitialTheme = () => {
          applyTheme(readInitialTheme(), { persist: false, animate: false })
        }

        applyInitialTheme()

        const handleMediaChange = (event) => {
          const stored = safeStorage.get()
          if (stored !== 'light' && stored !== 'dark') {
            applyTheme(event.matches ? 'dark' : 'light', { persist: false, animate: false })
          }
        }

        prefersDark.addEventListener?.('change', handleMediaChange)

        window.__BX_THEME__ = {
          get() {
            return html.classList.contains('dark') ? 'dark' : 'light'
          },
          set(nextTheme) {
            const normalized = nextTheme === 'dark' ? 'dark' : 'light'
            applyTheme(normalized, { persist: true, animate: true })
            return normalized
          },
          toggle() {
            const next = html.classList.contains('dark') ? 'light' : 'dark'
            applyTheme(next, { persist: true, animate: true })
            return next
          },
          resetToSystem() {
            safeStorage.clear()
            applyInitialTheme()
          },
        }
      })()
    </script>
    <link rel="alternate" type="application/rss+xml" title="RSS Feed" href="/rss.xml" />
    <Posthog />
  </Head>
  <body>
    <!-- Google Tag Manager (noscript) -->
    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-W7XSCCH7"
    height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    <!-- End Google Tag Manager (noscript) -->

    <div class="flex h-fit min-h-screen w-full flex-col gap-y-4 sm:gap-y-6 font-sans">
      <Navbar client:load />
      <main class="flex grow flex-col bg-background mt-16 lg:mt-6 mobile-scroll" aria-label="Main content" role="main">
        <div
          class={cn(
            'mx-auto flex grow flex-col gap-y-4 px-4 py-4 sm:gap-y-6 sm:px-6 sm:py-16 md:py-20 lg:py-24 lg:px-8',
            !isWide && 'max-w-5xl'
          )}
        >
          <slot />
        </div>
      </main>
      <Footer />
    </div>
    <!-- PWA Service Worker 注册 -->
    <script is:inline>
      // 注册 Service Worker
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', function() {
          navigator.serviceWorker.register('/sw.js')
            .then(function(registration) {
              console.log('SW注册成功: ', registration.scope);
            })
            .catch(function(error) {
              console.log('SW注册失败: ', error);
            });
        });
      }
    </script>

    <!-- 优化 Google Analytics 加载 -->
    <script is:inline>
      // 延迟加载 Google Analytics
      window.addEventListener('load', function() {
        setTimeout(function() {
          const script = document.createElement('script');
          script.src = 'https://www.googletagmanager.com/gtag/js?id=G-QVK59XQK72';
          script.async = true;
          document.head.appendChild(script);
          
          window.dataLayer = window.dataLayer || [];
          function gtag() {
            dataLayer.push(arguments);
          }
          gtag("js", new Date());
          gtag("config", "G-QVK59XQK72");
        }, 1000);
      });
    </script>


  </body>
</html>
