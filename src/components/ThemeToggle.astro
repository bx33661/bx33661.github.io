---
import { Button } from '@/components/ui/button'
import { Icon } from 'astro-icon/components'
---

<Button
  id="theme-toggle"
  variant="secondary"
  size="icon"
  title="Toggle theme"
  aria-pressed="false"
>
  <Icon
    name="lucide:sun"
    class="size-4 scale-100 rotate-0 transition-all dark:scale-0 dark:-rotate-90"
  />
  <Icon
    name="lucide:moon"
    class="absolute size-4 scale-0 rotate-90 transition-all dark:scale-100 dark:rotate-0"
  />
  <span class="sr-only">Toggle theme</span>
</Button>

<script>
  const EVENT_NAME = 'bx-theme-change'
  let toggleButton: HTMLButtonElement | null = null

  const getActiveTheme = () => {
    const api = window.__BX_THEME__
    if (api && typeof api.get === 'function') {
      return api.get()
    }
    return document.documentElement.classList.contains('dark') ? 'dark' : 'light'
  }

  const updateAriaState = (theme: ThemeName) => {
    if (!toggleButton) return
    toggleButton.setAttribute('aria-pressed', theme === 'dark' ? 'true' : 'false')
  }

  const handleThemeChange = (event: Event) => {
    const detail = (event as CustomEvent<{ theme?: ThemeName }>).detail
    const theme = detail?.theme
    if (theme === 'light' || theme === 'dark') {
      updateAriaState(theme)
    }
  }

  const handleToggleClick = () => {
    const api = window.__BX_THEME__
    if (api && typeof api.toggle === 'function') {
      const next = api.toggle()
      updateAriaState(next)
    } else {
      const nextIsDark = !document.documentElement.classList.contains('dark')
      const nextTheme = nextIsDark ? 'dark' : 'light'
      const element = document.documentElement

      element.classList.toggle('dark', nextIsDark)
      element.dataset.theme = nextTheme
      element.style.colorScheme = nextIsDark ? 'dark' : 'light'
      element.style.backgroundColor = nextIsDark ? '#1a1b26' : '#f8fafc'

      updateAriaState(nextTheme)
    }
  }

  const setup = () => {
    const candidate = document.getElementById('theme-toggle') as HTMLButtonElement | null
    if (!candidate) {
      return
    }

    if (toggleButton !== candidate) {
      toggleButton?.removeEventListener('click', handleToggleClick)
      toggleButton = candidate
    }

    toggleButton.removeEventListener('click', handleToggleClick)
    toggleButton.addEventListener('click', handleToggleClick)

    window.removeEventListener(EVENT_NAME, handleThemeChange)
    window.addEventListener(EVENT_NAME, handleThemeChange)

    updateAriaState(getActiveTheme())
  }

  setup()
  document.addEventListener('astro:after-swap', setup)
</script>
